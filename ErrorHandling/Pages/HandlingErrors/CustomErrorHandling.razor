@page "/custom-error-handling"
@using ErrorHandling.Utils
@using System.Collections.Specialized
@inject ExceptionRecorderService ExceptionRecorderService

<h3>CustomErrorHandling</h3>
<div class="border border-primary border-5 p-3">
    <div>Custom error boundary with modified max error.</div>
    <BlazorSchoolErrorBoundary>
        <ChildContent>
            <TriggerError />
        </ChildContent>
        <ErrorContent>
            <TriggerError />
            <div>Throw more error and I will crash.</div>
        </ErrorContent>
    </BlazorSchoolErrorBoundary>
</div>
<div class="border border-success border-5 p-3 mt-5">
    <div>Custom error boundary with default error content.</div>
    <BlazorSchoolErrorBoundary>
        <TriggerError />
    </BlazorSchoolErrorBoundary>
</div>

@foreach (var exception in ExceptionRecorderService.Exceptions)
{
    <div>@exception.Message</div>
}

@code {
    protected override void OnInitialized()
    {
        ExceptionRecorderService.Exceptions.CollectionChanged += RefreshUI;
    }

    public void RefreshUI(object? sender, NotifyCollectionChangedEventArgs eventArgs)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ExceptionRecorderService.Exceptions.CollectionChanged -= RefreshUI;
    }
}